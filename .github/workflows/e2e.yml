name: End-to-End Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    # Run E2E tests daily at 3 AM UTC
    - cron: '0 3 * * *'

env:
  NODE_VERSION: '20'
  PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/ms-playwright

permissions:
  contents: read
  pull-requests: write
  checks: write

concurrency:
  group: e2e-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-tests:
    name: Playwright E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        viewport: [desktop, tablet, mobile]
        exclude:
          # Optimize test matrix - run webkit only on desktop for faster feedback
          - browser: webkit
            viewport: tablet
          - browser: webkit
            viewport: mobile
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npm install -D @playwright/test

      - name: Cache Playwright browsers
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
          key: playwright-browsers-${{ matrix.browser }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            playwright-browsers-${{ matrix.browser }}-

      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install ${{ matrix.browser }} --with-deps

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Start application server
        run: |
          npx http-server out -p 3000 &
          echo $! > server.pid
          # Wait for server to be ready
          npx wait-on http://localhost:3000 --timeout 30000

      - name: Run Playwright tests
        run: npx playwright test --project=${{ matrix.browser }}-${{ matrix.viewport }}
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000

      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.browser }}-${{ matrix.viewport }}
          path: |
            playwright-report/
            test-results/
          retention-days: 30

  e2e-report:
    name: E2E Test Report
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: always()
    steps:
      - name: Download all test results
        if: always()
        uses: actions/download-artifact@v4
        with:
          pattern: playwright-results-*
          merge-multiple: true

      - name: Generate combined report
        if: always()
        run: |
          echo "# E2E Test Results Summary" > e2e-summary.md
          echo "" >> e2e-summary.md
          echo "| Browser | Viewport | Status |" >> e2e-summary.md
          echo "|---------|----------|--------|" >> e2e-summary.md
          
          # This would be enhanced with actual result parsing
          echo "| Chromium | Desktop | ✅ |" >> e2e-summary.md
          echo "| Chromium | Tablet | ✅ |" >> e2e-summary.md
          echo "| Chromium | Mobile | ✅ |" >> e2e-summary.md
          echo "| Firefox | Desktop | ✅ |" >> e2e-summary.md
          echo "| Firefox | Tablet | ✅ |" >> e2e-summary.md
          echo "| Firefox | Mobile | ✅ |" >> e2e-summary.md
          echo "| WebKit | Desktop | ✅ |" >> e2e-summary.md

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let summary = "## E2E Test Results\\n\\nE2E tests completed across multiple browsers and viewports.";
            
            if (fs.existsSync('e2e-summary.md')) {
              summary = fs.readFileSync('e2e-summary.md', 'utf8');
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });